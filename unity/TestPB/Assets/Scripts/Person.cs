// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Person.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lua.User {

  /// <summary>Holder for reflection information generated from Person.proto</summary>
  public static partial class PersonReflection {

    #region Descriptor
    /// <summary>File descriptor for Person.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PersonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxQZXJzb24ucHJvdG8SCEx1YS5Vc2VyGg1fSGVhZGVyLnByb3RvIjgKCVJl",
            "cVBlcnNvbhIfCgZIZWFkZXIYASABKAsyDy5MdWEuX1JlcUhlYWRlchIKCgJJ",
            "RBgKIAEoCSKlAQoJUmVzUGVyc29uEg8KB0VyckNvZGUYASABKAUSCwoDQWdl",
            "GAsgASgFEgwKBE5hbWUYDCABKAkSMAoHUHJpdmF0ZRgUIAEoCzIfLkx1YS5V",
            "c2VyLlJlc1BlcnNvbi5Qcml2YXRlSW5mbxotCgtQcml2YXRlSW5mbxIOCgZI",
            "ZWlnaHQYASABKAISDgoGV2VpZ2h0GAIgASgHSgUIZBDoB0oECAoQC0ICSANi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lua.HeaderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lua.User.ReqPerson), global::Lua.User.ReqPerson.Parser, new[]{ "Header", "ID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Lua.User.ResPerson), global::Lua.User.ResPerson.Parser, new[]{ "ErrCode", "Age", "Name", "Private" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Lua.User.ResPerson.Types.PrivateInfo), global::Lua.User.ResPerson.Types.PrivateInfo.Parser, new[]{ "Height", "Weight" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  request
  /// </summary>
  public sealed partial class ReqPerson : pb::IMessage<ReqPerson> {
    private static readonly pb::MessageParser<ReqPerson> _parser = new pb::MessageParser<ReqPerson>(() => new ReqPerson());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqPerson> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lua.User.PersonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPerson() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPerson(ReqPerson other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      iD_ = other.iD_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPerson Clone() {
      return new ReqPerson(this);
    }

    /// <summary>Field number for the "Header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Lua._ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lua._ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 10;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqPerson);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqPerson other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (ID != other.ID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (ID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqPerson other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Lua._ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Lua._ReqHeader();
            }
            input.ReadMessage(header_);
            break;
          }
          case 82: {
            ID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  response
  /// </summary>
  public sealed partial class ResPerson : pb::IMessage<ResPerson> {
    private static readonly pb::MessageParser<ResPerson> _parser = new pb::MessageParser<ResPerson>(() => new ResPerson());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResPerson> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lua.User.PersonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPerson() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPerson(ResPerson other) : this() {
      errCode_ = other.errCode_;
      age_ = other.age_;
      name_ = other.name_;
      Private = other.private_ != null ? other.Private.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPerson Clone() {
      return new ResPerson(this);
    }

    /// <summary>Field number for the "ErrCode" field.</summary>
    public const int ErrCodeFieldNumber = 1;
    private int errCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 11;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 12;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Private" field.</summary>
    public const int PrivateFieldNumber = 20;
    private global::Lua.User.ResPerson.Types.PrivateInfo private_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lua.User.ResPerson.Types.PrivateInfo Private {
      get { return private_; }
      set {
        private_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResPerson);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResPerson other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrCode != other.ErrCode) return false;
      if (Age != other.Age) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Private, other.Private)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (private_ != null) hash ^= Private.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrCode);
      }
      if (Age != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Age);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (private_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Private);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (private_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Private);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResPerson other) {
      if (other == null) {
        return;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.private_ != null) {
        if (private_ == null) {
          private_ = new global::Lua.User.ResPerson.Types.PrivateInfo();
        }
        Private.MergeFrom(other.Private);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ErrCode = input.ReadInt32();
            break;
          }
          case 88: {
            Age = input.ReadInt32();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 162: {
            if (private_ == null) {
              private_ = new global::Lua.User.ResPerson.Types.PrivateInfo();
            }
            input.ReadMessage(private_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResPerson message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PrivateInfo : pb::IMessage<PrivateInfo> {
        private static readonly pb::MessageParser<PrivateInfo> _parser = new pb::MessageParser<PrivateInfo>(() => new PrivateInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PrivateInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Lua.User.ResPerson.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PrivateInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PrivateInfo(PrivateInfo other) : this() {
          height_ = other.height_;
          weight_ = other.weight_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PrivateInfo Clone() {
          return new PrivateInfo(this);
        }

        /// <summary>Field number for the "Height" field.</summary>
        public const int HeightFieldNumber = 1;
        private float height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "Weight" field.</summary>
        public const int WeightFieldNumber = 2;
        private uint weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PrivateInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PrivateInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Height != other.Height) return false;
          if (Weight != other.Weight) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Height != 0F) hash ^= Height.GetHashCode();
          if (Weight != 0) hash ^= Weight.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Height != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Height);
          }
          if (Weight != 0) {
            output.WriteRawTag(21);
            output.WriteFixed32(Weight);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Height != 0F) {
            size += 1 + 4;
          }
          if (Weight != 0) {
            size += 1 + 4;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PrivateInfo other) {
          if (other == null) {
            return;
          }
          if (other.Height != 0F) {
            Height = other.Height;
          }
          if (other.Weight != 0) {
            Weight = other.Weight;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 13: {
                Height = input.ReadFloat();
                break;
              }
              case 21: {
                Weight = input.ReadFixed32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
